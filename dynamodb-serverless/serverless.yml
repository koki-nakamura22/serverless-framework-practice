service: dynamodb-serverless

frameworkVersion: '2'

provider:
  name: aws
  stage: ${opt:stage, "dev"}
  endpointType: REGIONAL
  runtime: python3.8
  versionFunctions: true
  lambdaHashingVersion: 20201221
  profile: serverless-admin
  region: ap-northeast-1
  apiGateway:
    apiKeys:
      - free:
          - name: ${file(./config/serverless-apigateway.yml):${self:provider.stage}.apikey-name}
            value: ${file(./config/serverless-apigateway.yml):${self:provider.stage}.apikey-value}
    usagePlan:
      - free:
          quota:
            limit: 100 # APIの呼び出しを行える最大回数
            offset: 0 # APIの呼び出し回数の初期値 (通常は0回を指定)
            period: DAY # DAY or WEEK or MONTH
          throttle:
            burstLimit: 200 # 1秒あたりに処理できるAPIリクエスト数
            rateLimit: 100 # 同時に処理できる最大リクエスト数
  deploymentBucket:
    name: ${file(./config/serverless-s3.yml):deploymentBucketName}
    maxPreviousDeploymentArtifacts: ${file(./config/serverless-s3.yml):maxPreviousDeploymentArtifacts}
  environment:
    STAGE: ${self:provider.stage}

package:
  individually: true
  exclude:
    - config/**
    - functions/**
    - README.md

layers:
  faker:
    name: faker
    path: layers/faker
    compatibleRuntimes: ${self:provider.runtime}

functions:
  put:
    handler: functions/put/handler.put
    layers:
      - { Ref: FakerLambdaLayer }
    memorySize: 128
    timeout: 60
    events:
      - http:
          path: /put
          method: post
          cors: true
          private: true
    package:
      individually: true
      include:
        functions/put/*
    role: LambdaDynamoDBAdmin

plugins:
  - serverless-prune-plugin
  - serverless-offline

resources:
  Resources:
    DynamoDbTable:
        Type: 'AWS::DynamoDB::Table'
        Properties:
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
                - AttributeName: name
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH
                - AttributeName: name
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: TestUsersTable-${self:provider.stage}
    LambdaDynamoDBAdmin:
      Type: AWS::IAM::Role
      Properties:
        RoleName: LambdaDynamoDBAdmin
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LambdaDynamoDBAdminPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                    - "dynamodb:*"
                  Resource:
                    - "arn:aws:dynamodb:${self:provider.region}:${file(./config/aws-account.yml):id}:table/*"

custom:
  prune:
    automatic: true # デプロイ時にserverless-prune-pluginを自動で動作させる
    number: 3 # AWS Lambda上で管理される世代の最大数
